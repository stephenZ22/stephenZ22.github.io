<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>作用域 on Stephen’s Life</title><link>https://stephenz22.github.io/tags/%E4%BD%9C%E7%94%A8%E5%9F%9F/</link><description>Recent content in 作用域 on Stephen’s Life</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 20 Mar 2023 23:06:29 +0800</lastBuildDate><atom:link href="https://stephenz22.github.io/tags/%E4%BD%9C%E7%94%A8%E5%9F%9F/index.xml" rel="self" type="application/rss+xml"/><item><title>Golang 基础语法-变量及基本类型</title><link>https://stephenz22.github.io/posts/go_variable_basic_type/</link><pubDate>Mon, 20 Mar 2023 23:06:29 +0800</pubDate><guid>https://stephenz22.github.io/posts/go_variable_basic_type/</guid><description>变量声明 Link to heading 在Goalng中声明变量有两种形式一种为标准形式，一种为短声明形式。标准形式的变量声明需要用到的var关键字。每个var关键字后面跟随一个变量名。下面演示这两种变量声明形式：
// go_variable_basic.go package main import &amp;#34;fmt&amp;#34; // 在函数外部声明的变量为全局变量或者包变量 // 在函数内部声明的变量为局部变量 // 标准形式 全局变量 var name, addr string = &amp;#34;张学友&amp;#34;, &amp;#34;中国香港&amp;#34; var age int = 62 // 标准形式利用类型推断 var school = &amp;#34;北京大学&amp;#34; var since = 1898 // 标准形式的省略初始值, 利用各自类型的默认值声明 var language string var compiled bool var number int func main() { fmt.Println(name, addr, age, school, language, compiled, number) // 短声明形式只可在函数内部使用，用来声明局部变量 // 注意！！！ // golang 当一个局部变量被声明之后至少要被使用一次 // 否则编译器将会报错， 全局变量则不受此限制 bookName := &amp;#34;局外人&amp;#34; fmt.</description></item></channel></rss>