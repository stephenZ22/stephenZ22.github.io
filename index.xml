<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Stephen’s Life</title><link>http://example.org/</link><description>Recent content on Stephen’s Life</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 13 Mar 2023 19:40:10 +0800</lastBuildDate><atom:link href="http://example.org/index.xml" rel="self" type="application/rss+xml"/><item><title>常见算法的Ruby实现</title><link>http://example.org/posts/sort_algorithm/</link><pubDate>Mon, 13 Mar 2023 19:40:10 +0800</pubDate><guid>http://example.org/posts/sort_algorithm/</guid><description>常见排序算法的 Ruby 实现 Link to heading 关于排序，可以说是算法的入门问题。每个程序员都有所了解或者熟悉。常见的如冒泡排序、选择排序、快速排序等。下面我会用Ruby语言来实现几个常见的排序算法，并对算法原理，及代码实现思路做出解释。
冒泡排序 Link to heading 关于冒泡排序，多数朋友都有耳闻，这里列出维基百科对冒泡排序的解释以供了解及加深印象
冒泡排序（英语：Bubble Sort）又称为泡式排序，是一种简单的排序算法。它重复地走访过要排序的数列，一次比较两个元素，如果它们的顺序错误就把它们交换过来。走访数列的工作是重复地进行直到没有再需要交换，也就是说该数列已经排序完成。这个算法的名字由来是因为越小的元素会经由交换慢慢“浮”到数列的顶端。
好了，现在我们看一下冒泡排序的 Ruby 实现
# 冒泡排序 bubble sort def bubble_sort(nums) loop do mark = 0 (nums.length - 1).times do |i| if nums[i] &amp;gt; nums[i + 1] nums[i], nums[i + 1] = nums[i + 1], nums[i] mark = 1 end end break if mark.zero? end nums end # p bubble_sort([9,8,2,7,4,6,5,3,1]) # [1, 2, 3, 4, 5, 6, 7, 8, 9] # 下面利用递归实现一个冒泡排序 def bubble_sort_by_recurve(nums) mark = 0 (nums.</description></item><item><title>About</title><link>http://example.org/about/</link><pubDate>Mon, 13 Mar 2023 15:10:10 +0800</pubDate><guid>http://example.org/about/</guid><description>一名在北京以编写Ruby代码为生的音乐爱好者,于 16 年参加工作. 简单介绍一下过去几年的一些工作经历:
Program Language 使用Ruby语言, 及Ruby On Rails 框架开发 web 应用,熟悉 Ruby Mate Programming. BackEnd 数据库方面熟悉 Mysql, Postgresql, 以及Redis. FrontEnd 方面熟悉 Javascript 语言, Html, 不是很擅长 Css，但也经常进行样式方面的修改. 目前为离职状态，多年的工作后发现，自己不断的积累工作经验，学习各类技能，每次都太仓促了，导致自身的知识与技能不能很好的串联。这次离职的主要目的也是给自己一段放空的时间，梳理、总结、记录，对记录很重要过去 7 年的工作经验，掌握的技能，各类方法论。
我的邮箱: Stephenzhao94@163.com</description></item></channel></rss>